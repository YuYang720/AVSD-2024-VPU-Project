#create_supply_net VSS
#create_supply_net VDD
#
#create_supply_set SPPLYSET  -function {power VDD}  -function {ground VSS}
#
#create_power_domain PD_CHIP -supply {primary SPPLYSET}
#
#create_supply_port VDD -domain PD_CHIP -direction in
#create_supply_port VSS -domain PD_CHIP -direction in
#
#connect_supply_net VSS  -ports {VSS}
#connect_supply_net VDD  -ports {VDD} 
#
#connect_supply_net VDD -port {u_TOP/IM1/i_SRAM/VDD  u_TOP/DM1/i_SRAM/VDD}
#connect_supply_net VDD -port {u_TOP/IM1/i_SRAM/VDDM u_TOP/DM1/i_SRAM/VDDM}
#connect_supply_net VSS -port {u_TOP/IM1/i_SRAM/VSS  u_TOP/DM1/i_SRAM/VSS}
#
##connect_supply_net VDD -port [ get_pins */VDD]
##connect_supply_net VDD -port [ get_pins */VDDM]
##connect_supply_net VSS -port [ get_pins */VSS]
#
##set_domain_supply_net PD_CHIP  -primary_power_net VDD -primary_ground_net VSS
#
##set_level_shifter risc_ls_in -domain PD_CHIP\
##	-applies_to inputs -rule low_to_high -location self
##set_level_shifter risc_ls_out -domain PD_CHIP\
##	-applies_to outputs -rule high_to_low -location parent
#
#set_design_attributes -elements {.} -attribute correlated_supply_group {*}
#
#add_power_state -supply SPPLYSET -state ON  { -supply_expr { power == {FULL_ON 1.0} && ground == {FULL_ON 0.0} } }
#create_power_state_group PST
#add_power_state -group PST -state RUN   {-logic_expr { SPPLYSET==ON  }}



set_design_top CHIP

##############################
##    CREATE POWER DOMAIN   ##
##############################
create_power_domain TOP

create_supply_port VDD
create_supply_port VSS

create_supply_net  VDD
#create_supply_net  VDDL
create_supply_net  VSS

connect_supply_net VDD   -ports VDD
connect_supply_net VSS   -ports VSS


#create_power_domain CPU  -elements u_TOP/cpu

#create_supply_net  VDD   -domain CPU -reuse
#create_supply_net  VSS   -domain CPU -reuse
#create_supply_net  VDDL  -domain CPU -reuse

## PRIMARY POWER NETS ##
set_domain_supply_net TOP   -primary_power_net VDD   -primary_ground_net VSS
#set_domain_supply_net CPU  -primary_power_net VDDL   -primary_ground_net VSS


##############################
##       POWER SWITCH       ##
##############################
#create_power_switch cpu_sw \
#  -domain CPU \
#  -input_supply_port  {in  VDD } \
#  -output_supply_port {out VDDL} \
#  -control_port {cpu_sd PwrCtrl/cpu_sd} \
#  -on_state  {ON in {!cpu_sd}} \
#  -off_state {OFF    {cpu_sd}}
#

##############################
##      POWER ISOLATION     ##
##############################
#set_isolation cpu_iso_out \
#  -domain CPU \
#  -isolation_power_net VDD -isolation_ground_net VSS \
#  -clamp_value latch \
#  -applies_to outputs
#
#set_isolation_control cpu_iso_out \
#  -domain CPU \
#  -isolation_signal PwrCtrl/cpu_iso \
#  -isolation_sense low \
#  -location parent


##############################
##      POWER RETENTION     ##
##############################
#set_retention cpu_ret -domain CPU \
#  -retention_power_net VDD -retention_ground_net VSS
#
#set_retention_control cpu_ret -domain CPU \
#  -save_signal {PwrCtrl/cpu_save high} \
#  -restore_signal {PwrCtrl/cpu_restore high}

#map_retention_cell cpu_ret \
#  -domain CPU \
#  -lib_cells {SAEDRVT14_FSB2BDPRBQ_PV2_2 \
#  SAEDRVT14_FSB2BDPRBQ_PV2_4 \
#  SAEDRVT14_FSB2BDPRBQ_PV2_8 \
#  }


##############################
## CREATE POWER STATE TABLE ##
##############################
#add_port_state VSS  	-state {GND  0}
#add_port_state VDD   	-state {ON  0.72}
#add_port_state cpu_sw/out -state {ON  0.72} -state {OFF off}
#
#create_pst SYSTEM_PST  -supplies              {VDD    cpu_sw/out }
#add_pst_state FUNCTION -pst SYSTEM_PST -state {ON     ON          }
#add_pst_state SLEEP    -pst SYSTEM_PST -state {ON     OFF         }
